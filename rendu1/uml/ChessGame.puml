@startuml
'https://plantuml.com/class-diagram





class ChessGame {
- window : Window
- players : List<Player>
- ChessGame(window : Window, listPlayers : List<Player>)
+ getInstanceChessGame() : ChessGame
}

class Player {
+ namePlayer : String
+ piece : List<Piece>
+ nbPieces : Integer
+ colorOfPiece : String
+ score = 0 : Integer
+ Player(name : String,piece : Piece,color : String)
}

abstract class AbstractPiece {
+ moveForward(posX : String, posY : Integer)
+ moveBackward(posX : String, posY : Integer)
+ moveHorizontal(posX : String, posY : Integer)
}

class Piece
{
+ <<Create>> Piece(posX : String, posY : Integer)
+ doSomething()
}

class PieceFactory
{
    + <<Create>> PieceFactory()
    + createRook(posX : String, posY : Integer) : Rook
    + createKnight(posX : String, posY : Integer) : Knight
    + createBishop(posX : String, posY : Integer) : Bishop
    + createQueen(posX : String, posY : Integer) : Queen
    + createKing(posX : String, posY : Integer) : King
    + createPawn(posX : String, posY : Integer) : Pawn
}

class Rook
{
   + posX : String
   + posY : Integer
   + Rook()
   + moveForward(posX : String, posY : Integer)
   + moveBackward(posX : String, posY : Integer)
   + moveHorizontal(posX : String, posY : Integer)
}

class Knight
{
    + posX : String
    + posY : Integer
    + Knight()
    + moveForward(posX : String, posY : Integer)
    + moveBackward(posX : String, posY : Integer)
    + moveHorizontal(posX : String, posY : Integer)
}

class Bishop
{
    + posX : String
    + posY : Integer
    + Bishop()
    + moveForward(posX : String, posY : Integer)
    + moveBackward(posX : String, posY : Integer)
    + moveHorizontal(posX : String, posY : Integer)
}

class Queen
{
    + posX : String
    + posY : Integer
    + Queen()
    + moveForward(posX : String, posY : Integer)
    + moveBackward(posX : String, posY : Integer)
    + moveHorizontal(posX : String, posY : Integer)
}

class King
{
    + posX : String
    + posY : Integer
    + King()
    + moveForward(posX : String, posY : Integer)
    + moveBackward(posX : String, posY : Integer)
    + moveHorizontal(posX : String, posY : Integer)
}

class Pawn
{
    + posX : String
    + posY : Integer
    + Pawn()
    + moveForward(posX : String, posY : Integer)
}

Piece -.> "use" AbstractPiece
Piece -.> "use" PieceFactory
PieceFactory -.> "use" AbstractPiece
PieceFactory -.> "use" Rook
PieceFactory -.> "use" Knight
PieceFactory -.> "use" Bishop
PieceFactory -.> "use" Queen
PieceFactory -.> "use" King
PieceFactory -.> "use" Pawn

Rook --|> AbstractPiece
Knight --|> AbstractPiece
Bishop --|> AbstractPiece
Queen --|> AbstractPiece
King --|> AbstractPiece
Pawn --|> AbstractPiece

ChessGame *--> "play to  2 players" Player
Player *--> "play with 16" Piece


@enduml